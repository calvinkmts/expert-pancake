version: '3.5'

services:
  account-service:
    build:
      context: ./service/account
      dockerfile: Dockerfile
    networks:
      - postgres
    restart: always
    ports:
      - "4000:4000"
    deploy:
      mode: replicated
      replicas: 1
  business-service:
    build:
      context: ./service/business
      dockerfile: Dockerfile
    networks:
      - postgres
    restart: always
    ports:
      - "4010:4010"
    deploy:
      mode: replicated
      replicas: 1
  accounting-service:
    build:
      context: ./service/accounting
      dockerfile: Dockerfile
    networks:
      - postgres
    restart: always
    ports:
      - "4020:4020"
    deploy:
      mode: replicated
      replicas: 1
  business-relation-service:
    build:
      context: ./service/business-relation
      dockerfile: Dockerfile
    networks:
      - postgres
    restart: always
    ports:
      - "4030:4030"
    deploy:
      mode: replicated
      replicas: 1
  inventory-service:
    build:
      context: ./service/inventory
      dockerfile: Dockerfile
    networks:
      - postgres
    restart: always
    ports:
      - "4040:4040"
    deploy:
      mode: replicated
      replicas: 1
  warehouse-service:
    build:
      context: ./service/warehouse
      dockerfile: Dockerfile
    networks:
      - postgres
    restart: always
    ports:
      - "4050:4050"
    deploy:
      mode: replicated
      replicas: 1
  notification-service:
    build:
      context: ./service/notification
      dockerfile: Dockerfile
    networks:
      - postgres
    restart: always
    ports:
      - "4060:4060"
    deploy:
      mode: replicated
      replicas: 1
  purchasing-service:
    build:
      context: ./service/purchasing
      dockerfile: Dockerfile
    networks:
      - postgres
    restart: always
    ports:
      - "4070:4070"
    deploy:
      mode: replicated
      replicas: 1

  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "6000:5432"
    networks:
      - postgres
    restart: unless-stopped
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped

  krakend:
    container_name: krakend_container
    image: devopsfaith/krakend:2.1.0
    volumes:
      - $PWD:/etc/krakend/
    ports:
      - "8080:8080"
    command: ["run", "-d", "-c", "/etc/krakend/krakend.json"]

networks:
  postgres:
    driver: bridge

volumes:
    postgres:
    pgadmin: